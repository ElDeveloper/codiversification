What it does:

run_test_cospeciation

takes:
	- cOTU basename
	- host tree fp
	- host_dist matrix
	- mapping_fp
	- mapping_category
	- output_dir
	- test to run
	- sig level
	- perms

does:
	• opens cOTU table
	• opens mapping file
	• summarizes cOTU table by mapping file
	• checks that is less than 3 hosts of otus
	• imports cOTU tree
	• Roots at midpoint
	• imports host tree
	• gets rid of samples and OTUs from otu table not in host tree
	• subsets host tree to just hosts represented in subset otu table
	• subsets otu tree to just OTUs respresented in subset otu table
	• filters host DM to just hosts represented in subset otu table
	• checks that there are still more >= 3 hosts/otus
	• runs test
	• calculates p value
	• writes results file
		-calculates h span

suggest:
does:
	
	move all filehandling to parent 
	{
		• opens cOTU table
		• opens mapping file
		• summarizes cOTU table by mapping file
		• checks that is less than 3 hosts of otus
		• imports cOTU tree
		• Roots at midpoint
		• imports host tree
	}
	
	make function "intersect samples":
	{
		• gets rid of hosts and OTUs from otu table not in host tree
		• subsets host tree to just hosts represented in subset otu table
		• subsets otu tree to just OTUs respresented in subset otu table
		• filters host DM to just hosts represented in subset otu table
		• checks that there are still more >= 3 hosts/otus
		
		#Input: otu table, host tree, host DM
		#Actions: finds intersection of hosts represented in OTU tables, trees, 
			and DMs. 
		
		#Don't need to warn about Samples not present in host tree -- should only do this at initial tree filter
		#get rid of summarize code -- messes up rarifactions. rely on user to summarize and rarify input otu table before preclustering. 
		#replace filter DM with code form filter_distance_matrix.py
		#replace filter tree with code from filter_tree.py in 1.6.0 (add temporarily to this script)
		#replace filter otu table by tree with filter_samples_from_otu_table(otu_table_lines,
                                  samples_to_discard,
                                  negate=False) in filter.py
	}
	• runs test
	• calculates p value
	
	move results writing to parent, separate into function "write results":
	{
		• writes results file
			-calculates h span <--move to function to modify acc_dict after test
	}
	



TO DO:

• Change DM handling: handle all DMs as native qiime DMs; 
	convert to qiime dm from cogent get_distances immediately.
	use qiime filter dm for dm filtering

• 
